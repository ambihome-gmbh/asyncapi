defmodule ParserTest do
  use ExUnit.Case

  import Enum

  import Asyncapi.Parser
  # import Xypher.Sigil

  test "step" do
    # step("from->to: operation")

    # step("f->t: op[p1: $r, p2: 1]/{int: 1, str: 'tst', ref: $ref, flt: 1.2, bnd: bind}")
    # |> resolve

    _sequence =
      [
        "user->service: create/{name: 'SomeName'}",
        "service->user: create_response/{name: 'SomeName', id: stack_id}",
        "user->service: push[stack_id: $stack_id]/{value: 42}",
        "user->service: pop[stack_id: $stack_id]",
        "service->user: pop_response[stack_id: $stack_id]/{value: 42}"
      ]
      |> map(&step/1)
      |> map(&resolve_step/1)
      |> Testhelpers.create_testcase

  end
end
