asyncapi: 3.0.0
x-testcases:
  - name: create, push, pop - ok
    sequence:
      - "user->>service: create/{name: 'SomeName'}"
      - "service->>user: create_response/{name: 'SomeName', id: stack_id}"
      - "user->>service: push[stack_id: $stack_id]/{value: 42}"
      - "user->>service: pop[stack_id: $stack_id]"
      - "service->>user: pop_response[stack_id: $stack_id]/{value: 42}"
channels:
  create:
    address: stack/create
    title: Create channel
    messages:
      create-message:
        name: Create
        payload:
          "$ref": "#/components/schemas/create"
        examples:
          - name: "create: SomeName"
            payload:
              name: SomeName
    description: Channel for pushing values onto the stack
  create_response:
    address: stack/create_response
    messages:
      create-message:
        name: CreateResponse
        payload:
          "$ref": "#/components/schemas/create_response"
  push:
    address: stack/push/{stack_id}
    parameters:
      stack_id:
        "$ref": "#/components/parameters/stack_id"
    title: Push channel
    messages:
      push-message:
        name: Push
        payload:
          "$ref": "#/components/schemas/push"
        examples:
          - name: "push: 42"
            payload:
              value: 42
    description: Channel for pushing values onto the stack
  pop:
    address: stack/pop/{stack_id}
    parameters:
      stack_id:
        "$ref": "#/components/parameters/stack_id"
    title: Pop channel
    messages:
      pop-message:
        name: pop
        payload:
          "$ref": "#/components/schemas/empty"
        examples:
          - name: pop
            payload: {}
    description: Channel for popping values from the stack
  pop_response:
    address: stack/pop/response/{stack_id}
    parameters:
      stack_id:
        "$ref": "#/components/parameters/stack_id"
    title: Pop Response channel
    messages:
      pop-response-message:
        name: PopResponse
        payload:
          "$ref": "#/components/schemas/pop_response"
        examples:
          - name: "pop-response: 42"
            payload:
              value: 42
          - name: "pop-response: empty"
            payload:
              value:
    description: Channel for receiving responses after popping values from the stack
components:
  schemas:
    empty:
      type: object
      additionalProperties: false
      properties: {}
    pop_response:
      type: object
      additionalProperties: false
      properties:
        value:
          type:
            - integer
            - "null"
      required:
        - value
    create_response:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    create:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
      required:
        - name
    push:
      type: object
      additionalProperties: false
      properties:
        value:
          type: integer
      required:
        - value
  parameters:
    stack_id:
      description: ID of the stack
