{
  "asyncapi": "3.0.0",
  "x-testcases": [
    {
      "name": "create scene",
      "sequence": [
        "user->service: scn_add/{id: 'x', name: 'S1', member_channels: ['ch1', 'ch2']}",
        "service->user: scn_info_state[scene_id: id]/{name: 'S1'}",
        "user->service: scn_update[scene_id: $id]/{id: $id, name: 'S11', member_channels: ['ch1', 'ch2']}",
        "service->user: scn_info_state[scene_id: $id]/{name: 'S11'}"
      ]
    }
  ],
  "channels": {
    "SCN_CMD_ADD": {
      "address": "SCN/CMD_ADD",
      "messages": {
        "add": {
          "name": "ADD",
          "payload": {
            "$ref": "#/components/schemas/scn_config_payload"
          }
        }
      },
      "description": "Add a new scene. A new `scene_id` is created by the service. Publishes `SCN_INFO_STATE/{scene_id}`."
    },
    "SCN_CMD_CALL": {
      "address": "SCN/CMD_CALL/{scene_id}",
      "messages": {
        "call": {
          "name": "CALL",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "Call scene with ID `scene_id`. The scene must exist and must not be an undo-scene. When a scene is called, the stored value for each member is sent to the bus. The scene's undo-scene is deleted. New undo-scene is created. Publishes `SCN/INFO_STATE/{scene_id}`.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_CMD_DELETE": {
      "address": "SCN/CMD_DELETE/{scene_id}",
      "messages": {
        "delete": {
          "name": "DELETE",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "Delete scene with ID `scene_id`. The scene must exist and must not be an undo-scene. The scene's undo-scene is deleted. Publishes `SCN/INFO_DELETED/{scene_id}`.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_CMD_GET_ALL_INFO": {
      "address": "SCN/CMD_GET_ALL_INFO",
      "messages": {
        "get_all_info": {
          "name": "GET_ALL_INFO",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "Request status of all scenes. Publishes `SCN/INFO_STATE/{scene_id}` for all scenes."
    },
    "SCN_CMD_GET_INFO": {
      "address": "SCN/CMD_GET_INFO/{scene_id}",
      "messages": {
        "get_info": {
          "name": "GET_INFO",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "Request status of scene with ID `scene_id`. The scene must exist and must not be an undo-scene. Publishes `SCN/INFO_STATE/{scene_id}`.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_CMD_LEARN": {
      "address": "SCN/CMD_LEARN/{scene_id}",
      "messages": {
        "learn": {
          "name": "LEARN",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "Learn scene with ID `scene_id`. The scene must exist and must not be an undo-scene. When a scene is learned the current state of all members is stored. Publishes `SCN/INFO_STATE/{scene_id}`.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_CMD_UNDO_SCENE": {
      "address": "SCN/CMD_UNDO_SCENE/{scene_id}",
      "messages": {
        "undo": {
          "name": "UNDO",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "Call undo-scene of scene with ID `scene_id`. The scene must exist and must not be an undo-scene. The must have been called once, so that an undo-scene exists. The called undo-scene is then deleted.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_CMD_UPDATE": {
      "address": "SCN/CMD_UPDATE/{scene_id}",
      "messages": {
        "update": {
          "name": "UPDATE",
          "payload": {
            "$ref": "#/components/schemas/scn_config_payload"
          }
        }
      },
      "description": "Update name and members of scene with ID `scene_id`. All members and their stored values are deleted and then the given members are added. The fixed attribute cannot be changed.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_INFO_STATE": {
      "address": "SCN/INFO_STATE/{scene_id}",
      "messages": {
        "info": {
          "name": "INFO_STATE",
          "payload": {
            "$ref": "#/components/schemas/scn_config_payload"
          }
        }
      },
      "description": "State of scene with ID `scene_id`.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_INFO_DELETED": {
      "address": "SCN/INFO_DELETED/{scene_id}",
      "messages": {
        "deleted": {
          "name": "INFO_DELETED",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "The scene with ID `scene_id` was deleted.",
      "parameters": {
        "scene_id": {
          "$ref": "#/components/parameters/scene_id"
        }
      }
    },
    "SCN_ERROR": {
      "address": "SCN/ERROR",
      "messages": {
        "error": {
          "name": "ERROR",
          "payload": {
            "$ref": "common.json#/components/schemas/empty_payload"
          }
        }
      },
      "description": "some error occurred, back to sender. TODO payload, needs sender trait"
    }
  },
  "components": {
    "parameters": {
      "scene_id": {
        "description": "ID of a scene."
      }
    },
    "schemas": {
      "scn_config_payload": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "Scene ID - TODO trait that overwrites this with null for cmd-add",
            "type": "string"
          },
          "name": {
            "description": "Scene name",
            "type": "string"
          },
          "member_channels": {
            "description": "channel ids of the scene members",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "fixed": {
            "description": "Scene is fixed",
            "type": "boolean",
            "default": false
          },
          "fixed_type": {
            "description": "scene fixed to min or max values",
            "type": "string",
            "default": "fixed_type_none",
            "enum": [
              "fixed_type_min",
              "fixed_type_max",
              "fixed_type_none"
            ]
          },
          "static": {
            "description": "Scene is static",
            "type": "boolean",
            "default": false
          },
        },
        "required": [
          "id",
          "name",
          "member_channels"
        ],
        "examples": [
          {
            "name": "Sample Scene Name",
            "member_channels": [
              "channel_3",
              "channel_14"
            ]
          }
        ]
      }
    }
  }
}