asyncapi: "3.0.0"

channels:
  functions-req:
    address: functions/req/all
    title: Functions req
    messages:
      filtered functions req:
        payload:
          $ref: "#/components/schemas/filter"

  functions-resp:
    address: functions/resp/all
    title: Functions Response
    messages:
      all function instances:
        payload:
          $ref: "#/components/schemas/functions"

  function-req:
    address: functions/req/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Function Request
    messages:
      empty:
        payload:
          $ref: "#/components/schemas/empty"

  function-resp:
    address: functions/resp/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Function Response
    messages:
      function instance:
        payload:
          $ref: "#/components/schemas/function"

  functionpoints-req:
    address: functionpoints/req/all
    title: Functionpoints Request
    messages:
      filtered functionpoints req:
        payload:
          $ref: "#/components/schemas/filter"

  functionpoints-resp:
    address: functionpoints/resp/all
    title: Functionpoints Request
    messages:
      all functionpoint instances:
        payload:
          $ref: "#/components/schemas/functionpoints"

  functionpoint-req:
    address: functionpoint/req/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Functionpoint Request
    messages:
      empty:
        payload:
          $ref: "#/components/schemas/empty"

  functionpoint-resp:
    address: functionpoint/resp/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Functionpoint Response
    messages:
      functionpoint instance:
        payload:
          $ref: "#/components/schemas/functionpoint"

  locations-req:
    address: locations/req/all
    title: Locations Request
    messages:
      filtered locations req:
        payload:
          $ref: "#/components/schemas/filter"

  locations-resp:
    address: locations/resp/all
    title: Locations Response
    messages:
      all location instances:
        payload:
          $ref: "#/components/schemas/locations"

  location-req:
    address: location/req/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Location Request
    messages:
      empty:
        payload:
          $ref: "#/components/schemas/empty"

  location-resp:
    address: location/resp/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Location Response
    messages:
      location instance:
        payload:
          $ref: "#/components/schemas/location"

  functionpoint-write-req:
    address: functionpoint-write/req/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Functionpoint Write Request
    messages:
      functionpoint write:
        payload:
          $ref: "#/components/schemas/functionpoint-write"

  functionpoint-write-ind:
    address: functionpoint-write/ind/{instance_id}
    parameters:
      instance_id:
        "$ref": "#/components/parameters/instance_id"
    title: Functionpoint Write Indication
    messages:
      functionpoint write:
        payload:
          $ref: "#/components/schemas/functionpoint-write"

components:
  parameters:
    instance_id:
      description: ID of the instance
      x-format: uuid

  schemas:
    function:
      $ref: "./generated/application-functions.json#/application_function"

    functionpoint:
      $ref: "./generated/functionpoints.json#/functionpoint"

    functionpoint-write:
      $ref: "./generated/functionpoint-writes.json#/functionpoint_write"

    functions:
      type: array
      items:
        $ref: "#/components/schemas/function"

    functionpoints:
      type: array
      items:
        $ref: "#/components/schemas/functionpoint"

    location:
      $ref: "./location.yaml#/location"

    locations:
      type: array
      items:
        $ref: "#/components/schemas/location"

    filter:
      type: object
      properties:
        foo:
          type: string
      required:
        - foo
      additionalProperties: false

    empty:
      type: object
      additionalProperties: false

    # dpt1_1:
    #   "$ref": "#/components/schemas/dpt1_1_f1"

    # dpt1_1_f1:
    #   type: string
    #   enum: ["on", "off"]

    # dpt2_1_f2:
    #   type: string
    #   enum: ["control", "no_control"]

    # dpt2_1:
    #   type: object
    #   properties:
    #     value:
    #       "$ref": "#/components/schemas/dpt1_1_f1"
    #     control:
    #       "$ref": "#/components/schemas/dpt2_1_f2"
